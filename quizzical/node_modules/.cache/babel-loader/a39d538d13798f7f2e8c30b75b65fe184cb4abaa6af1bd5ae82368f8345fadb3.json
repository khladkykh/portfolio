{"ast":null,"code":"var _jsxFileName = \"/Users/katerinagladkih/Library/Mobile Documents/com~apple~CloudDocs/WebDev/projects/quizzical/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Question from \"./components/Question\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [allQuestions, setallQuestions] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"https://opentdb.com/api.php?amount=5&difficulty=medium&type=multiple\").then(res => res.json()).then(results => setallQuestions(results.results));\n  }, []);\n  const handleClick = () => {\n    const answerStatus = {\n      isHeld: false\n    };\n    setallQuestions(question => [...question, ...answerStatus]);\n  };\n  function shuffleAnswers(answers) {\n    for (let i = answers.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [answers[i], answers[j]] = [answers[j], answers[i]];\n    }\n    return answers;\n  }\n  const questionEl = allQuestions.map(question => {\n    const answers = shuffleAnswers([question.correct_answer, ...question.incorrect_answers]);\n    return /*#__PURE__*/_jsxDEV(Question, {\n      question: question.question,\n      answers: answers\n    }, nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this);\n  });\n  console.log(allQuestions);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [questionEl, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"answer-button\",\n      children: \"Check answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EvXVknt+tyX6OZfq/DWUzSKMi7M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Question","nanoid","App","allQuestions","setallQuestions","useState","useEffect","fetch","then","res","json","results","handleClick","answerStatus","isHeld","question","shuffleAnswers","answers","i","length","j","Math","floor","random","questionEl","map","correct_answer","incorrect_answers","console","log"],"sources":["/Users/katerinagladkih/Library/Mobile Documents/com~apple~CloudDocs/WebDev/projects/quizzical/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Question from \"./components/Question\";\nimport { nanoid } from \"nanoid\";\n\nfunction App() {\n\n  const [allQuestions, setallQuestions] = React.useState([])\n  \n    \n     React.useEffect(() => {\n        fetch(\"https://opentdb.com/api.php?amount=5&difficulty=medium&type=multiple\")\n        .then(res => res.json())\n        .then(results => setallQuestions(results.results))\n    }, [])\n\n    \n\n    const handleClick = () => {\n      const answerStatus = {isHeld: false};\n      setallQuestions(question => [...question, ...answerStatus])\n    }\n\n    function shuffleAnswers(answers) {\n      for (let i = answers.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [answers[i], answers[j]] = [answers[j], answers[i]];\n      }\n      return answers;\n    }\n    \n    const questionEl = allQuestions.map(question => {\n      const answers = shuffleAnswers([question.correct_answer, ...question.incorrect_answers]);\n      return (\n        <Question\n          key={nanoid()}\n          question={question.question}\n          answers={answers}\n        />\n      );\n    });\n    console.log(allQuestions)\n\n  return (\n    <div className=\"App\">\n      {questionEl}\n      <button className=\"answer-button\" >Check answers</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,MAAM,QAAQ,QAAQ;AAAC;AAEhC,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGL,KAAK,CAACM,QAAQ,CAAC,EAAE,CAAC;EAGvDN,KAAK,CAACO,SAAS,CAAC,MAAM;IACnBC,KAAK,CAAC,sEAAsE,CAAC,CAC5EC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,OAAO,IAAIP,eAAe,CAACO,OAAO,CAACA,OAAO,CAAC,CAAC;EACtD,CAAC,EAAE,EAAE,CAAC;EAIN,MAAMC,WAAW,GAAG,MAAM;IACxB,MAAMC,YAAY,GAAG;MAACC,MAAM,EAAE;IAAK,CAAC;IACpCV,eAAe,CAACW,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAE,GAAGF,YAAY,CAAC,CAAC;EAC7D,CAAC;EAED,SAASG,cAAc,CAACC,OAAO,EAAE;IAC/B,KAAK,IAAIC,CAAC,GAAGD,OAAO,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC3C,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7C,CAACD,OAAO,CAACC,CAAC,CAAC,EAAED,OAAO,CAACG,CAAC,CAAC,CAAC,GAAG,CAACH,OAAO,CAACG,CAAC,CAAC,EAAEH,OAAO,CAACC,CAAC,CAAC,CAAC;IACrD;IACA,OAAOD,OAAO;EAChB;EAEA,MAAMO,UAAU,GAAGrB,YAAY,CAACsB,GAAG,CAACV,QAAQ,IAAI;IAC9C,MAAME,OAAO,GAAGD,cAAc,CAAC,CAACD,QAAQ,CAACW,cAAc,EAAE,GAAGX,QAAQ,CAACY,iBAAiB,CAAC,CAAC;IACxF,oBACE,QAAC,QAAQ;MAEP,QAAQ,EAAEZ,QAAQ,CAACA,QAAS;MAC5B,OAAO,EAAEE;IAAQ,GAFZhB,MAAM,EAAE;MAAA;MAAA;MAAA;IAAA,QAGb;EAEN,CAAC,CAAC;EACF2B,OAAO,CAACC,GAAG,CAAC1B,YAAY,CAAC;EAE3B,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,WACjBqB,UAAU,eACX;MAAQ,SAAS,EAAC,eAAe;MAAA,UAAE;IAAa;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACrD;AAEV;AAAC,GA5CQtB,GAAG;AAAA,KAAHA,GAAG;AA8CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}